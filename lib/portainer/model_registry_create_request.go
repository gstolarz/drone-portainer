/*
 * Portainer API
 *
 * Portainer API is an HTTP API served by Portainer. It is used by the Portainer UI and everything you can do with the UI can be done using the HTTP API. Examples are available at https://gist.github.com/deviantony/77026d402366b4b43fa5918d41bc42f8 You can find out more about Portainer at [http://portainer.io](http://portainer.io) and get some support on [Slack](http://portainer.io/slack/).  # Authentication  Most of the API endpoints require to be authenticated as well as some level of authorization to be used. Portainer API uses JSON Web Token to manage authentication and thus requires you to provide a token in the **Authorization** header of each request with the **Bearer** authentication mechanism.  Example: ``` Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE ```  # Security  Each API endpoint has an associated access policy, it is documented in the description of each endpoint.  Different access policies are available: * Public access * Authenticated access * Restricted access * Administrator access  ### Public access  No authentication is required to access the endpoints with this access policy.  ### Authenticated access  Authentication is required to access the endpoints with this access policy.  ### Restricted access  Authentication is required to access the endpoints with this access policy. Extra-checks might be added to ensure access to the resource is granted. Returned data might also be filtered.  ### Administrator access  Authentication as well as an administrator role are required to access the endpoints with this access policy.  # Execute Docker requests  Portainer **DO NOT** expose specific endpoints to manage your Docker resources (create a container, remove a volume, etc...).  Instead, it acts as a reverse-proxy to the Docker HTTP API. This means that you can execute Docker requests **via** the Portainer HTTP API.  To do so, you can use the `/endpoints/{id}/docker` Portainer API endpoint (which is not documented below due to Swagger limitations). This endpoint has a restricted access policy so you still need to be authenticated to be able to query this endpoint. Any query on this endpoint will be proxied to the Docker API of the associated endpoint (requests and responses objects are the same as documented in the Docker API).  **NOTE**: You can find more information on how to query the Docker API in the [Docker official documentation](https://docs.docker.com/engine/api/v1.30/) as well as in [this Portainer example](https://gist.github.com/deviantony/77026d402366b4b43fa5918d41bc42f8). 
 *
 * API version: 1.24.1
 * Contact: info@portainer.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package portainer

import (
	"encoding/json"
)

// RegistryCreateRequest struct for RegistryCreateRequest
type RegistryCreateRequest struct {
	// Name that will be used to identify this registry
	Name string `json:"Name"`
	// Registry Type. Valid values are: 1 (Quay.io), 2 (Azure container registry) or 3 (custom registry)
	Type int32 `json:"Type"`
	// URL or IP address of the Docker registry
	URL string `json:"URL"`
	// Is authentication against this registry enabled
	Authentication bool `json:"Authentication"`
	// Username used to authenticate against this registry
	Username string `json:"Username"`
	// Password used to authenticate against this registry
	Password string `json:"Password"`
}

// NewRegistryCreateRequest instantiates a new RegistryCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistryCreateRequest(name string, type_ int32, uRL string, authentication bool, username string, password string) *RegistryCreateRequest {
	this := RegistryCreateRequest{}
	this.Name = name
	this.Type = type_
	this.URL = uRL
	this.Authentication = authentication
	this.Username = username
	this.Password = password
	return &this
}

// NewRegistryCreateRequestWithDefaults instantiates a new RegistryCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistryCreateRequestWithDefaults() *RegistryCreateRequest {
	this := RegistryCreateRequest{}
	return &this
}

// GetName returns the Name field value
func (o *RegistryCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RegistryCreateRequest) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RegistryCreateRequest) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *RegistryCreateRequest) GetType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RegistryCreateRequest) GetTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RegistryCreateRequest) SetType(v int32) {
	o.Type = v
}

// GetURL returns the URL field value
func (o *RegistryCreateRequest) GetURL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.URL
}

// GetURLOk returns a tuple with the URL field value
// and a boolean to check if the value has been set.
func (o *RegistryCreateRequest) GetURLOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.URL, true
}

// SetURL sets field value
func (o *RegistryCreateRequest) SetURL(v string) {
	o.URL = v
}

// GetAuthentication returns the Authentication field value
func (o *RegistryCreateRequest) GetAuthentication() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value
// and a boolean to check if the value has been set.
func (o *RegistryCreateRequest) GetAuthenticationOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Authentication, true
}

// SetAuthentication sets field value
func (o *RegistryCreateRequest) SetAuthentication(v bool) {
	o.Authentication = v
}

// GetUsername returns the Username field value
func (o *RegistryCreateRequest) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *RegistryCreateRequest) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *RegistryCreateRequest) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *RegistryCreateRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *RegistryCreateRequest) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *RegistryCreateRequest) SetPassword(v string) {
	o.Password = v
}

func (o RegistryCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Name"] = o.Name
	}
	if true {
		toSerialize["Type"] = o.Type
	}
	if true {
		toSerialize["URL"] = o.URL
	}
	if true {
		toSerialize["Authentication"] = o.Authentication
	}
	if true {
		toSerialize["Username"] = o.Username
	}
	if true {
		toSerialize["Password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableRegistryCreateRequest struct {
	value *RegistryCreateRequest
	isSet bool
}

func (v NullableRegistryCreateRequest) Get() *RegistryCreateRequest {
	return v.value
}

func (v *NullableRegistryCreateRequest) Set(val *RegistryCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistryCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistryCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistryCreateRequest(val *RegistryCreateRequest) *NullableRegistryCreateRequest {
	return &NullableRegistryCreateRequest{value: val, isSet: true}
}

func (v NullableRegistryCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistryCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


